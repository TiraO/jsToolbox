<idea-plugin version="2">
  <id>com.karateca.jstoolbox</id>
  <name>JS Toolbox</name>
  <version>1.3</version>
  <vendor email="code@karateca.com" url="http://www.andresdominguez.com">
    www.andresdominguez.com
  </vendor>

  <description><![CDATA[
    <h1>JS Toolbox </h1>

    <p>An Intellij / Webstorm plugin that provides several tools for javascript development.</p>

    <p>Here is a list of available actions:</p>

    <ul>
      <li>Go to test [Alt T], [Ctrl Command T] on a Mac</li>
      <li>Go to view [Alt V], [Ctrl Command V] on a Mac</li>
      <li>Go to constructor [Alt G], [Ctrl Command G] on a mac</li>
      <li>Join multi-line strings and variable declarations [Ctrl SHIFT Alt J], [Ctrl Command J] on a Mac</li>
      <li>Open current file in browser [Ctrl SHIFT Alt G], [SHIFT Option Command G] on a Mac</li>
      <li>Generate a method for the current javascript class</li>
      <li>Override a method from the parent javascript class</li>
    </ul>
    <p>See all the JS Toolbox actions from two locations:</p>

    <ul>
      <li>From Tools &gt; JS Toolbox</li>
      <li>From the editor, right click &gt; JS Toolbox</li>
    </ul>

    <h3>Go to test [Alt T], [Ctrl Command T] on a Mac</h3>
    <p>
      Jump between a javascript file and its unit test. You can configure the
      file name patterns under:
    </p>
    <p>Settings > JS Toolbox</p>
    <p>
      And set values for <strong>Unit test suffix</strong> and
      <strong>File suffix</strong>
    </p>
    <p>
      If you need multiple patterns use comma. For example:<br><br>

      Unit test suffix: "Spec.js,-spec.js"<br>
      File suffix: "-controller.js,.js"<br><br>

      With this configuration the action will take you from:<br><br>

      "my-component.js" or "my-component-controller.js"<br><br>

      to<br><br>

      "my-componentSpec.js" or "my-component-spec.js"
    </p>

    <h3>Go to view [Alt V], [Ctrl Command V] on a Mac</h3>
    <p>
      Jump between a javascript file and its associated view. You can
      configure the file name patterns under:
    </p>
    <p>
      Settings > JS Toolbox<br><br>

      And set values for <strong>View suffix</strong> and
      <strong>File suffix</strong><br><br>

      If you need multiple patterns use comma. For example:<br><br>

      File suffix: "-controller.js,.js"<br>
      View suffix: "-view.html,.html"<br><br>

      With this configuration the action will take you from:<br><br>

      "my-component.js" or "my-component-controller.js"<br><br>

      to<br><br>

      "my-component.html" or "my-component-view.html"
    </p>

    <h3>Go to constructor [Alt G], [Ctrl Command G] on a mac</h3>
    <p>
      Jump to the constructor of the current javascript file.
    </p>

    <h3>Join multi-line strings and variable declarations [Ctrl SHIFT Alt J], [Ctrl Command J] on a Mac</h3>

    <p>Join strings and variable declarations</p>

    <p>Turn a multi-line string into a single string. Press Ctrl SHIFT Alt J on any of the string lines or select a
      block of text and join.</p>

    <pre>
    var s = 'one ' +
        'two ' +
        'three';
    </pre>

    <p>Into a single string:</p>

    <pre>
    var s = 'one two three';
    </pre>

    <p>Join multiple vars into a single var:</p>

    <pre>
    var foo = 1;
    var bar = 2;
    </pre>

    <p>Into a single var declaration:</p>

    <pre>
    var foo = 1,
        bar = 2;
    </pre>

    <h3>Open current file in browser [Ctrl SHIFT Alt G], [SHIFT Option Command G] on a Mac</h3>

    <p>Open the current file in the browser. Configure the URL that you want to use when opening the browser under
      Settings &gt; JS Toolbox.</p>

    <h3>Generate a method for the current javascript class (Under generate menu)</h3>

    <p>Add a new method to the current javascript class. </p>

    <p>You need to use the @constructor annotation to mark the constructor of the class.</p>

    <h3>Override a method from the parent javascript class (Under generate menu)</h3>

    <p>Override a parent method in the current javascript class. </p>

    <p>You need to annotate the classes with the @constructor and @extends annotations, otherwise the plugin cannot find
      the class hierarchy.</p>
    ]]></description>

  <change-notes><![CDATA[
    <h2>1.0</h2>
    <p>Initial version</p>
    <h2>1.1</h2>
    <p>Fix override method bug</p>
    <h2>1.2</h2>
    <p>Add support for constructors with the following syntax: function MyConstructor() {}</p>
    <h2>1.2.1</h2>
    <p>Fix bug finding the parents in override javascript method</p>
    <h2>1.3</h2>
    <p>Add shortcut to add a semicolon at the end of the current line.</p>
    ]]>
    </change-notes>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="107.105"/>

  <depends>com.intellij.modules.lang</depends>

  <application-components>
    <!-- Add your application components here -->
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>

  <actions>
    <!-- Add your actions here -->
    <action id="com.karateca.jstoolbox.joiner.JoinerAction"
            class="com.karateca.jstoolbox.joiner.JoinerAction" text="Join"
            description="Joint a string or multiple variable declarations">
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt J"/>
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta J"/>
    </action>
    <action id="com.karateca.jstoolbox.toconstructor.GoToConstructorAction"
            class="com.karateca.jstoolbox.toconstructor.GoToConstructorAction"
            text="Go to constructor"
            description="Go to the constructor">
      <keyboard-shortcut keymap="$default" first-keystroke="alt G"/>
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta G"/>
    </action>
    <action id="com.karateca.jstoolbox.torelated.GoToTestAction"
            class="com.karateca.jstoolbox.torelated.GoToTestAction"
            text="Go to test"
            description="Go to the test file form the file of the view">
      <keyboard-shortcut keymap="$default" first-keystroke="alt T"/>
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta T"/>
    </action>
    <action id="com.karateca.jstoolbox.torelated.GoToViewAction"
            class="com.karateca.jstoolbox.torelated.GoToViewAction"
            text="Go to view"
            description="Switch between the view and the controller">
      <keyboard-shortcut keymap="$default" first-keystroke="alt V"/>
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta V"/>
    </action>
    <action id="com.karateca.jstoolbox.tobrowser.ToBrowserAction"
            class="com.karateca.jstoolbox.tobrowser.ToBrowserAction"
            text="Open in browser"
            description="Open the current file in browser">
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt G"/>
    </action>
    <action id="com.karateca.jstoolbox.semicolon.AddSemiColonAction"
            class="com.karateca.jstoolbox.semicolon.AddSemiColonAction"
            text="Add semicolon" description="Add a ; at the end of the line">
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl SEMICOLON"/>
    </action>
    <action id="com.karateca.jstoolbox.generatemethod.GenerateMethodAction"
            class="com.karateca.jstoolbox.generatemethod.GenerateMethodAction"
            text="Generate javascript method"
            description="Generate a new method">
      <add-to-group group-id="GenerateGroup" anchor="last"/>
    </action>
    <action id="com.karateca.jstoolbox.generatemethod.OverrideMethodAction"
            class="com.karateca.jstoolbox.generatemethod.OverrideMethodAction"
            text="Override javascript method"
            description="Override a method from the parent">
      <add-to-group group-id="GenerateGroup" anchor="last"/>
    </action>

    <!-- Add everything under tools -->
    <group id="TestActionGroup"
           text="JS Toolbox"
           description="JS Toolbox"
           popup="true">
      <reference ref="com.karateca.jstoolbox.joiner.JoinerAction"/>
      <reference ref="com.karateca.jstoolbox.toconstructor.GoToConstructorAction"/>
      <reference ref="com.karateca.jstoolbox.torelated.GoToTestAction"/>
      <reference ref="com.karateca.jstoolbox.torelated.GoToViewAction"/>
      <reference ref="com.karateca.jstoolbox.tobrowser.ToBrowserAction"/>
      <reference ref="com.karateca.jstoolbox.semicolon.AddSemiColonAction"/>
      <reference ref="com.karateca.jstoolbox.generatemethod.GenerateMethodAction"/>
      <reference ref="com.karateca.jstoolbox.generatemethod.OverrideMethodAction"/>
      <add-to-group group-id="ToolsMenu" anchor="first"/>
      <add-to-group group-id="EditorPopupMenu"/>
    </group>
  </actions>

  <extensions defaultExtensionNs="com.intellij">
    <!-- Add your extensions here -->
    <applicationConfigurable
        instance="com.karateca.jstoolbox.config.JsToolboxConfigurable"/>
  </extensions>
</idea-plugin>
